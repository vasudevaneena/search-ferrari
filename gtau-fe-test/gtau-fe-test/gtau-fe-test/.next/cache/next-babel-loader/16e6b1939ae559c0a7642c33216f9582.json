{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactStuff\\\\gtau-fe-test\\\\gtau-fe-test\\\\gtau-fe-test\\\\components\\\\Listings.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextTruncate from \"react-text-truncate\";\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = int => {\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\"\n  }).format(int);\n  return formatter;\n};\n\nconst Listing = props => {\n  // TODO\n  console.log(\"props in listing\", props.data); // This should be the component which renders an individual listing to the page\n\n  const handleClick = title => {\n    console.log(title.currentTarget.textContent + \":\" + title.currentTarget.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"search-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, props.data && props.data.length ? props.data.map((image, index) => __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    key: `title${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(TextTruncate, {\n    line: 1,\n    truncateText: \"\\u2026\",\n    text: image.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, image.price !== \"Wanted\" ? __jsx(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, formatAsCurrency(image.price)) : __jsx(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, image.price), __jsx(\"span\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, image.location)), image.imgUrl ? __jsx(\"img\", {\n    key: `img${index}`,\n    src: image.imgUrl,\n    alt: `img${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }) : \"\", __jsx(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(TextTruncate, {\n    line: 3,\n    element: \"span\",\n    truncateText: \"\\u2026\",\n    text: image.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), __jsx(\"button\", {\n    className: \"button-style\",\n    value: image.title,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, ACTIONS[0]), __jsx(\"button\", {\n    className: \"button-style\",\n    value: image.title,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, ACTIONS[1]))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Records not found\"));\n};\n\nconst Listings = props => {\n  console.log(\"props\", props);\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]); // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n  useEffect(() => {\n    axios.get(props.dataEndpoint).then(resp => {\n      setSearchList(resp.data);\n      console.log(resp.data);\n      console.log(\"searchList\", searchList);\n    }).catch(err => {\n      console.log(\"err\", err.message);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Search Results\"), __jsx(\"div\", {\n    className: \"results_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, searchList.length, \" results \", __jsx(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, \"for\"), \" Ferrari \", __jsx(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 80\n    }\n  }, \"in\"), \" Australia\"), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(Listing, {\n    data: searchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Listings;","map":{"version":3,"sources":["D:/ReactStuff/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js"],"names":["React","useEffect","useState","axios","TextTruncate","ACTIONS","formatAsCurrency","int","formatter","Intl","NumberFormat","style","currency","format","Listing","props","console","log","data","handleClick","title","currentTarget","textContent","value","length","map","image","index","price","location","imgUrl","description","Listings","searchList","setSearchList","get","dataEndpoint","then","resp","catch","err","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextTruncate from \"react-text-truncate\";\n\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = (int) => {\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\",\n  }).format(int);\n  return formatter;\n};\n\nconst Listing = (props) => {\n  // TODO\n  console.log(\"props in listing\", props.data);\n  // This should be the component which renders an individual listing to the page\n  const handleClick = (title) => {\n    console.log(\n      title.currentTarget.textContent + \":\" + title.currentTarget.value\n    );\n  };\n  return (\n    <div className=\"search-grid\">\n      {props.data && props.data.length ? (\n        props.data.map((image, index) => (\n          <div className=\"\">\n            <div className=\"title\" key={`title${index}`}>\n              <TextTruncate line={1} truncateText=\"…\" text={image.title} />\n            </div>\n            <div>\n              {image.price !== \"Wanted\" ? (\n                <span className=\"price\">{formatAsCurrency(image.price)}</span>\n              ) : (\n                <span className=\"price\">{image.price}</span>\n              )}\n              <span className=\"location\">{image.location}</span>\n            </div>\n            {image.imgUrl ? (\n              <img key={`img${index}`} src={image.imgUrl} alt={`img${index}`} />\n            ) : (\n              \"\"\n            )}\n            <div className=\"description\">            \n              <TextTruncate\n                line={3}\n                element=\"span\"\n                truncateText=\"…\"\n                text={image.description}               \n              />\n            </div>\n            <button\n              className=\"button-style\"\n              value={image.title}\n              onClick={handleClick}\n            >\n              {ACTIONS[0]}\n            </button>\n            <button\n              className=\"button-style\"\n              value={image.title}\n              onClick={handleClick}\n            >\n              {ACTIONS[1]}\n            </button>\n          </div>\n        ))\n      ) : (\n        <div>Records not found</div>\n      )}\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  console.log(\"props\", props);\n  const [searchList, setSearchList] = useState([]);\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  useEffect(() => {\n    axios\n      .get(props.dataEndpoint)\n      .then((resp) => {\n        setSearchList(resp.data);\n        console.log(resp.data);\n        console.log(\"searchList\", searchList);\n      })\n      .catch((err) => {\n        console.log(\"err\", err.message);\n      });\n  }, []);\n  return (\n    <div>\n      <div className=\"listings__header\">Search Results</div>\n      <div className=\"results_header\">\n        {searchList.length} results <span className=\"title\">for</span> Ferrari <span className=\"title\">in</span> Australia\n      </div>\n      <div className=\"listings__grid\">\n        <Listing data={searchList}></Listing>\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}