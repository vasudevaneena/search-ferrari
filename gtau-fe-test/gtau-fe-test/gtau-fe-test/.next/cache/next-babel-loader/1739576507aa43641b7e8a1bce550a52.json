{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\ReactStuff\\\\gtau-fe-test\\\\gtau-fe-test\\\\gtau-fe-test\\\\components\\\\Listings.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextTruncate from \"react-text-truncate\";\nvar ACTIONS = [\"View\", \"Reply\"];\n\nvar formatAsCurrency = function formatAsCurrency(_int) {\n  var formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\"\n  }).format(_int);\n  return formatter;\n};\n\nvar Listing = function Listing(props) {\n  // TODO\n  console.log(\"props in listing\", props.data); // This should be the component which renders an individual listing to the page\n\n  var handleClick = function handleClick(title) {\n    console.log(title.currentTarget.textContent + ':' + title.currentTarget.value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, props.data && props.data.length ? props.data.map(function (image, index) {\n    return __jsx(\"div\", {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      key: \"title${index}\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(TextTruncate, {\n      line: 1,\n      truncateText: \"\\u2026\",\n      text: image.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    })), __jsx(\"div\", {\n      className: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, image.price !== \"Wanted\" ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, formatAsCurrency(image.price)) : __jsx(\"div\", {\n      className: \"price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, image.price)), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, image.location)), image.imgUrl ? __jsx(\"img\", {\n      key: \"img${index}\",\n      src: image.imgUrl,\n      alt: \"Image\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }) : \"\", __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \" \", __jsx(TextTruncate, {\n      line: 3,\n      element: \"span\",\n      truncateText: \"\\u2026\",\n      text: image.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), __jsx(\"button\", {\n      className: \"button-style\",\n      value: image.title,\n      onClick: handleClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, ACTIONS[0]), __jsx(\"button\", {\n      className: \"button-style\",\n      value: image.title,\n      onClick: handleClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, ACTIONS[1]));\n  }) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"not found\"));\n};\n\n_c = Listing;\n\nvar Listings = function Listings(props) {\n  _s();\n\n  console.log(\"props\", props);\n\n  var _useState = useState([]),\n      searchList = _useState[0],\n      setSearchList = _useState[1]; // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n\n\n  useEffect(function () {\n    axios.get(props.dataEndpoint).then(function (resp) {\n      setSearchList(resp.data);\n      console.log(resp.data);\n      console.log(\"searchList\", searchList);\n    })[\"catch\"](function (err) {\n      console.log(\"err\", err.message);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Search Results\"), __jsx(\"div\", {\n    className: \"results_header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, searchList.length, \" results for Ferrari in Australia\"), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Listing, {\n    data: searchList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Listings, \"zkyagqjRIk2PYCt+xI2v8UURLnE=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["D:/ReactStuff/gtau-fe-test/gtau-fe-test/gtau-fe-test/components/Listings.js"],"names":["React","useEffect","useState","axios","TextTruncate","ACTIONS","formatAsCurrency","int","formatter","Intl","NumberFormat","style","currency","format","Listing","props","console","log","data","handleClick","title","currentTarget","textContent","value","length","map","image","index","price","location","imgUrl","description","Listings","searchList","setSearchList","get","dataEndpoint","then","resp","err","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextTruncate from \"react-text-truncate\";\nconst ACTIONS = [\"View\", \"Reply\"];\n\nconst formatAsCurrency = (int) => {\n  const formatter = new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\",\n  }).format(int);\n  return formatter;\n};\n\nconst Listing = (props) => {\n  // TODO\n  console.log(\"props in listing\", props.data);\n  // This should be the component which renders an individual listing to the page\n  const handleClick = (title) => {\n    console.log(title.currentTarget.textContent+':'+ title.currentTarget.value);\n  };\n  return (\n    <div className=\"buttons\">\n      {props.data && props.data.length ? (\n        props.data.map((image, index) => (\n          <div className=\"\">\n            <div key=\"title${index}\">\n              <TextTruncate line={1} truncateText=\"…\" text={image.title} />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                {image.price !== \"Wanted\" ? (\n                  <div>{formatAsCurrency(image.price)}</div>\n                ) : (\n                  <div className=\"price\">{image.price}</div>\n                )}\n              </div>\n              <div className=\"col-md-6\">{image.location}</div>\n            </div>\n            {image.imgUrl ? (\n              <img key=\"img${index}\" src={image.imgUrl} alt=\"Image\" />\n            ) : (\n              \"\"\n            )}\n            <div>\n              {\" \"}\n              <TextTruncate\n                line={3}\n                element=\"span\"\n                truncateText=\"…\"\n                text={image.description}\n              />\n            </div>\n            <button className=\"button-style\" value={image.title} onClick={handleClick}>\n              {ACTIONS[0]}\n            </button>\n            <button className=\"button-style\" value={image.title} onClick={handleClick}>\n              {ACTIONS[1]}\n            </button>\n          </div>\n        ))\n      ) : (\n        <div>not found</div>\n      )}\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  console.log(\"props\", props);\n  const [searchList, setSearchList] = useState([]);\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  useEffect(() => {\n    axios\n      .get(props.dataEndpoint)\n      .then((resp) => {\n        setSearchList(resp.data);\n        console.log(resp.data);\n        console.log(\"searchList\", searchList);\n      })\n      .catch((err) => {\n        console.log(\"err\", err.message);\n      });\n  }, []);\n  return (\n    <div>\n      <div className=\"listings__header\">Search Results</div>\n      <div className=\"results_header\">\n        {searchList.length} results for Ferrari in Australia\n      </div>\n      <div className=\"listings__grid\">\n        <Listing data={searchList}></Listing>\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}